<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Car Control Simulator</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #f0f0f0;
    }
    
    .car-controls {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 10px;
    }
    
    button {
      border: none;
      border-radius: 8px;
      font-size: 18px;
      font-weight: bold;
      background-color: #3498db;
      color: white;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    button:hover {
      background-color: #2980b9;
    }
    
    button.active {
      background-color: #e74c3c;
      transform: scale(0.95);
      box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3);
    }
    
    .forward {
      grid-column: 2;
      grid-row: 1;
    }
    
    .left {
      grid-column: 1;
      grid-row: 2;
    }
    
    .right {
      grid-column: 3;
      grid-row: 2;
    }
    
    .backward {
      grid-column: 2;
      grid-row: 3;
    }
    
    .info {
      position: absolute;
      bottom: 20px;
      text-align: center;
      color: #555;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Car Control Simulator</h1>
    <div class="car-controls">
      <button class="forward">Forward</button>
      <button class="left">Left</button>
      <button class="right">Right</button>
      <button class="backward">Backward</button>
    </div>
    <div class="info">
      <p>Use Arrow Keys or WASD to control</p>
    </div>
  </div>
  
  <script>
    const buttons = {
      forward: document.querySelector('.forward'),
      left: document.querySelector('.left'),
      right: document.querySelector('.right'),
      backward: document.querySelector('.backward')
    };

    
    // Function to activate a button
    function activateButton(button) {
      button.classList.add('active');
    }
    
    // Function to deactivate a button
    function deactivateButton(button) {
      button.classList.remove('active');
    }
    
    // Set up click handlers for mouse/touch
    Object.entries(buttons).forEach(([direction, button]) => {
      button.addEventListener('mousedown', () => {
        activateButton(button);
        sendCommand(direction);
      });
      
      button.addEventListener('mouseup', () => {
        deactivateButton(button);
        sendCommand('stop');
      });
      
      button.addEventListener('touchstart', (e) => {
        e.preventDefault();
        activateButton(button);
        sendCommand(direction);
      });
      
      button.addEventListener('touchend', (e) => {
        e.preventDefault();
        deactivateButton(button);
        sendCommand('stop');
      });
      
      // Handle mouse leaving button while pressed
      button.addEventListener('mouseleave', () => {
        deactivateButton(button);
        sendCommand('stop');
      });
    });
    
    function sendCommand(command) {
      fetch(`http://192.168.4.1:8081/${command}`)
          .then(response => response.text())
          .then(data => console.log(data))
          .catch(error => console.error('Error:', error));
    }
    
    document.addEventListener('keydown', function (event) {
      if (event.repeat) return; // Avoid repeat events on key hold
      
      switch (event.key) {
        case 'ArrowUp':
        case 'w':
          activateButton(buttons.forward);
          sendCommand('forward');
          break;
        case 'ArrowDown':
        case 's':
          activateButton(buttons.backward);
          sendCommand('backward');
          break;
        case 'ArrowLeft':
        case 'a':
          activateButton(buttons.left);
          sendCommand('left');
          break;
        case 'ArrowRight':
        case 'd':
          activateButton(buttons.right);
          sendCommand('right');
          break;
        case ' ':
          sendCommand('stop');
          break;
      }
    });
    
    document.addEventListener('keyup', function (event) {
      switch (event.key) {
        case 'ArrowUp':
        case 'w':
          deactivateButton(buttons.forward);
          sendCommand('stop');
          break;
        case 'ArrowDown':
        case 's':
          deactivateButton(buttons.backward);
          sendCommand('stop');
          break;
        case 'ArrowLeft':
        case 'a':
          deactivateButton(buttons.left);
          sendCommand('stop');
          break;
        case 'ArrowRight':
        case 'd':
          deactivateButton(buttons.right);
          sendCommand('stop');
          break;
      }
    });
  </script>
</body>
</html>